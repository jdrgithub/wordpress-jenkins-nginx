events {}

http {
  client_max_body_size 64M;

  # nimbledev.io - public production
  server {
    listen 80;
    server_name nimbledev.io www.nimbledev.io;

    location / {
      return 301 https://$host$request_uri;
    }

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
  }

  server {
    listen 443 ssl;
    server_name nimbledev.io www.nimbledev.io;

    ssl_certificate /etc/ssl/cloudflare/nimbledev.io.pem;
    ssl_certificate_key /etc/ssl/cloudflare/nimbledev.io.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    resolver 127.0.0.11;  # ðŸ”¥ Docker embedded DNS server for dynamic container resolution

    # ðŸ”¥ Main site proxy (everything else)
    location / {
      set $upstream_wordpress wordpress;
      proxy_pass http://$upstream_wordpress:80;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ðŸ”’ Restrict wp-login.php to LAN only
    location = /wp-login.php {
      allow 192.168.1.0/24;
      deny all;

      set $upstream_wordpress wordpress;
      proxy_pass http://$upstream_wordpress:80;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /jenkins/ {
        proxy_pass http://${HOST_LAN_IP}:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect http://${LOCAL_LAN_IP}:8080/ /jenkins/;
    }
  }
}

